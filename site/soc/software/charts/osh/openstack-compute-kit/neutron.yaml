---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: neutron-soc
  layeringDefinition:
    abstract: false
    layer: site
    parentSelector:
      name: neutron-global
      component: neutron
    actions:
      - method: merge
        path: .
      - method: replace
        path: .values.network
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/PodScaleProfile/v1
        name: pod-scale-profile
        path: .pods.osh.neutron.server.min
      dest:
        path: .values.pod.replicas.server

data:
  namespace: openstack
  wait:
    timeout: {{ openstack_helm_deploy_timeout }}
  test:
    enabled: {{ run_tests }}
    timeout: {{ test_timeout }}
  values:
    pod:
      replicas:
        server: 1
    network:
      auto_bridge_add:
        br-ex: {{ neutron_external_interface }}
      interface:
        tunnel: {{ neutron_tunnel_device }}
    conf:
      paste:
        app:neutronversions:
          paste.app_factory: neutron.pecan_wsgi.app:versions_factory
      rootwrap_filters:
        l3:
          content: |
            # neutron-rootwrap command filters for nodes on which neutron is
            # expected to control network
            #
            # This file should be owned by (and only-writeable by) the root user
           
            # format seems to be
            # cmd-name: filter-name, raw-command, user, args
           
            [Filters]
            
            # arping
            arping: CommandFilter, arping, root
           
            # l3_agent
            sysctl: CommandFilter, sysctl, root
            route: CommandFilter, route, root
            radvd: CommandFilter, radvd, root
            
            # haproxy
            haproxy: RegExpFilter, haproxy, root, haproxy, -f, .*
            kill_haproxy: KillFilter, root, haproxy, -15, -9, -HUP
            # RHEL invocation of the metadata proxy will report /usr/bin/python
            # TODO(dalvarez): Remove kill_metadata* filters in Q release since
            # neutron-ns-metadata-proxy is now replaced by haproxy. We keep them for now
            # for the migration process
            kill_metadata: KillFilter, root, python, -15, -9
            kill_metadata7: KillFilter, root, python2.7, -15, -9
            kill_metadata35: KillFilter, root, python3.5, -15, -9
            kill_radvd_usr: KillFilter, root, /usr/sbin/radvd, -15, -9, -HUP
            kill_radvd: KillFilter, root, /sbin/radvd, -15, -9, -HUP
            
            # ip_lib
            ip: IpFilter, ip, root
            find: RegExpFilter, find, root, find, /sys/class/net, -maxdepth, 1, -type, l, -printf, %.*
            ip_exec: IpNetnsExecFilter, ip, root
           
            # l3_tc_lib
            l3_tc_show_qdisc: RegExpFilter, tc, root, tc, qdisc, show, dev, .+
            l3_tc_add_qdisc_ingress: RegExpFilter, tc, root, tc, qdisc, add, dev, .+, ingress
            l3_tc_add_qdisc_egress: RegExpFilter, tc, root, tc, qdisc, add, dev, .+, root, handle, 1:, htb
            l3_tc_show_filters: RegExpFilter, tc, root, tc, -p, -s, -d, filter, show, dev, .+, parent, .+, prio, 1
            l3_tc_delete_filters: RegExpFilter, tc, root, tc, filter, del, dev, .+, parent, .+, prio, 1, handle, .+, u32
            l3_tc_add_filter_ingress: RegExpFilter, tc, root, tc, filter, add, dev, .+, parent, .+, protocol, ip, prio, 1, u32, match, ip, dst, .+, police, rate, .+, burst, .+, mtu, 64kb, drop, flowid, :1
            l3_tc_add_filter_egress:  RegExpFilter, tc, root, tc, filter, add, dev, .+, parent, .+, protocol, ip, prio, 1, u32, match, ip, src, .+, police, rate, .+, burst, .+, mtu, 64kb, drop, flowid, :1
            
            # For ip monitor
            kill_ip_monitor: KillFilter, root, ip, -9
           
            # ovs_lib (if OVSInterfaceDriver is used)
            ovs-vsctl: CommandFilter, ovs-vsctl, root
           
            # iptables_manager
            iptables-save: CommandFilter, iptables-save, root
            iptables-restore: CommandFilter, iptables-restore, root
            ip6tables-save: CommandFilter, ip6tables-save, root
            ip6tables-restore: CommandFilter, ip6tables-restore, root
            
            # Keepalived
            keepalived: CommandFilter, keepalived, root
            kill_keepalived: KillFilter, root, keepalived, -HUP, -15, -9
            
            # l3 agent to delete floatingip's conntrack state
            conntrack: CommandFilter, conntrack, root
            
            # keepalived state change monitor
            keepalived_state_change: CommandFilter, neutron-keepalived-state-change, root
            # The following filters are used to kill the keepalived state change monitor.
            # Since the monitor runs as a Python script, the system reports that the
            # command of the process to be killed is python.
            # TODO(mlavalle) These kill filters will be updated once we come up with a
            # mechanism to kill using the name of the script being executed by Python
            kill_keepalived_monitor_py: KillFilter, root, python, -15
            kill_keepalived_monitor_py27: KillFilter, root, python2.7, -15
            kill_keepalived_monitor_py3: KillFilter, root, python3, -15
            kill_keepalived_monitor_py35: KillFilter, root, python3.5, -15
            kill_keepalived_monitor_py36: KillFilter, root, python3.6, -15
            kill_keepalived_monitor_py37: KillFilter, root, python3.7, -15
        dhcp:
          content: |

            # neutron-rootwrap command filters for nodes on which neutron is
            # expected to control network
            #
            # This file should be owned by (and only-writeable by) the root user
            
            # format seems to be
            # cmd-name: filter-name, raw-command, user, args
            
            [Filters]
            
            # dhcp-agent
            dnsmasq: CommandFilter, dnsmasq, root
            # dhcp-agent uses kill as well, that's handled by the generic KillFilter
            # it looks like these are the only signals needed, per
            # neutron/agent/linux/dhcp.py
            kill_dnsmasq: KillFilter, root, /sbin/dnsmasq, -9, -HUP, -15
            kill_dnsmasq_usr: KillFilter, root, /usr/sbin/dnsmasq, -9, -HUP, -15
            
            ovs-vsctl: CommandFilter, ovs-vsctl, root
            mm-ctl: CommandFilter, mm-ctl, root
            dhcp_release: CommandFilter, dhcp_release, root
            dhcp_release6: CommandFilter, dhcp_release6, root
            
            # haproxy
            haproxy: RegExpFilter, haproxy, root, haproxy, -f, .*
            kill_haproxy: KillFilter, root, haproxy, -15, -9, -HUP
            # RHEL invocation of the metadata proxy will report /usr/bin/python
            # TODO(dalvarez): Remove kill_metadata* filters in Q release since
            # neutron-ns-metadata-proxy is now replaced by haproxy. We keep them for now
            # for the migration process
            kill_metadata: KillFilter, root, python, -9
            kill_metadata7: KillFilter, root, python2.7, -9
            kill_metadata35: KillFilter, root, python3.5, -9
            
            # ip_lib
            ip: IpFilter, ip, root
            find: RegExpFilter, find, root, find, /sys/class/net, -maxdepth, 1, -type, l, -printf, %.*
            ip_exec: IpNetnsExecFilter, ip, root
...
