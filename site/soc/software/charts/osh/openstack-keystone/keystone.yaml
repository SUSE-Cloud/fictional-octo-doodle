---
schema: armada/Chart/v1
metadata:
  schema: metadata/Document/v1
  name: keystone-soc
  layeringDefinition:
    abstract: false
    layer: site
    parentSelector:
      name: keystone-global
      component: keystone
    actions:
      - method: merge
        path: .
  storagePolicy: cleartext
  substitutions:
    - src:
        schema: pegleg/PodScaleProfile/v1
        name: pod-scale-profile
        path: .pods.osh.keystone.api.min
      dest:
        path: .values.pod.replicas.api
data:
  wait:
    timeout: {{ openstack_helm_deploy_timeout }}
  test:
    enabled: {{ run_tests | default('true') }}
    timeout: {{ test_timeout | default(300) }}
  values:
    pod:
      replicas:
        api: 1
      security_context:
        keystone:
          pod:
            runAsUser: 0
          container:
            keystone_api:
              readOnlyRootFilesystem: false
    conf:
      software:
        apache2:
          binary: apache2ctl
          start_parameters: -DFOREGROUND -k start
          site_dir: /etc/apache2/vhosts.d
          conf_dir: /etc/apache2/conf.d
          a2enmod:
            - version
      security: |
        <Directory "/var/www">
          Options Indexes FollowSymLinks
          AllowOverride All
          <IfModule !mod_access_compat.c>
            Require all granted
          </IfModule>
          <IfModule mod_access_compat.c>
            Order allow,deny
            Allow from all
          </IfModule>
        </Directory>
      keystone:
        DEFAULT:
          debug: true
          default_log_levels: amqp=WARN,keystone=DEBUG,amqplib=WARN,boto=WARN,qpid=WARN,sqlalchemy=DEBUG,osprofiler=DEBUG,suds=INFO,oslo.messaging=DEBUG,oslo_messaging=DEBUG,oslo_middleware=DEBUG,iso8601=DEBUG,requests.packages.urllib3.connectionpool=DEBUG,urllib3.connectionpool=DEBUG,websocket=DEBUG,requests.packages.urllib3.util.retry=DEBUG,urllib3.util.retry=DEBUG,keystonemiddleware=DEBUG,routes.middleware=DEBUG,stevedore=WARN,taskflow=WARN,keystoneauth=DEBUG,oslo.cache=DEBUG,dogpile.core.dogpile=INFO
      logging:
        logger_root:
          level: DEBUG
          handlers: 'stdout'
    network:
      api:
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/ssl-redirect: "false"
...
