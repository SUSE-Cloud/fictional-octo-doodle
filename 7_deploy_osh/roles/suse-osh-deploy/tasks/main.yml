---
# tasks file for suse-osh-deploy
- name: Load standard variables
  include_vars: "{{ playbook_dir }}/../common-vars.yml"

- name: Create ses_cluster_configuration
  set_fact:
    ses_cluster_configuration: "{{ lookup('file', suse_osh_deploy_ses_config_path) | from_yaml }}"

- name: Load admin keyring from user_variables (required for now)
  include_vars: "{{ suse_osh_deploy_user_variables }}"

- name: Pre-fligt checks for the role
  assert:
    that:
      - ceph_admin_keyring_b64key is defined
      - ceph_user_keyring_b64key is defined
      - suse_osh_deploy_vip_with_cidr is defined

- name: Create a list of monitors (ip and port) if no override exists for it.
  set_fact:
    suse_osh_deploy_ceph_mons:  "[{% for ip in ses_cluster_configuration.ceph_conf.mon_host.split(',') %}'{{ ip }}:{{ ceph_mon_port | default(6789) }}'{% if not loop.last %},{% endif %}{% endfor %}]"
  when: suse_osh_deploy_ceph_mons is not defined
  tags:
    - always
    - run

- name: Install system packages
  package:
    name: "{{ suse_osh_deploy_packages }}"
    state: present
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  tags:
    - install

- name: Ensure kubectl is installed
  include: kubectl-install.yml
  tags:
    - install

- name: Ensure helm and tiller are up to date
  include: helm-install.yml
  tags:
    - install

# TODO(evrardjp): Replace this with systemd service
- name: Ensure helm runs on localhost
  include: helm-run.yml
  tags:
    - run

- name: Enrol nodes for CCP
  include: enroll-caasp-nodes-for-osh.yml
  tags:
    - run

- name: Ensure VIP is present in /etc/hosts for the services to deploy
  blockinfile:
    path: /etc/hosts
    block: |
      {{ suse_osh_deploy_vip_with_cidr | ipaddr('address') }} keystone keystone.openstack.svc.cluster.local
      {{ suse_osh_deploy_vip_with_cidr | ipaddr('address') }} glance glance.openstack.svc.cluster.local
      {{ suse_osh_deploy_vip_with_cidr | ipaddr('address') }} cinder cinder.openstack.svc.cluster.local
      {{ suse_osh_deploy_vip_with_cidr | ipaddr('address') }} nova nova.openstack.svc.cluster.local
      {{ suse_osh_deploy_vip_with_cidr | ipaddr('address') }} neutron neutron.openstack.svc.cluster.local
      {{ suse_osh_deploy_vip_with_cidr | ipaddr('address') }} horizon horizon.openstack.svc.cluster.local

# NOTE: This task should stay close to code-install, so that no race condition
# happens between the git-cloning, an eventual failure, and the building of the charts.
- name: Build infra charts
  make:
    chdir: /opt/openstack-helm-infra
    target: all
  when: _gitclone is changed
  tags:
    - install

- name: Create privileged ClusterRoleBinding for ServiceAccounts
  include: privileged-cluster-role-binding.yml
  tags:
    - run

- name: Updated wait for pods logic to account for stuck k8s jobs
  copy:
    src: wait-for-pods.sh
    dest: /opt/openstack-helm/tools/deployment/common/wait-for-pods.sh
    mode: '0755'
  tags:
    - horizon
    - run


# TODO(evrardjp): Use mechanism like glance to re-use component-install.yml code and allow any override.
- name: Setup openstack CLIs
  shell: ./tools/deployment/multinode/010-setup-client.sh
  args:
    executable: /bin/bash
    chdir: /opt/openstack-helm
  tags:
    - run

# TODO(evrardjp): Follow on https://review.openstack.org/#/c/605005/
- name: Use a different ingress script as long as upstream does not support overrides
  copy:
    src: 020-ingress.sh
    dest: /opt/openstack-helm/tools/deployment/multinode/020-ingress.sh
    mode: '0755'
  tags:
    - ingress
    - run

- name: Template file for the namespaces ingress
  config_template:
    src: suse-ingress-namespace.yaml.j2
    dest: /tmp/suse-ingress-namespace.yaml
    config_overrides: "{{ suse_osh_deploy_ingress_namespace_yaml_overrides }}"
    config_type: yaml

- name: Setup Basic ingress and namespace
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-ingress-kube-system.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_ingress_kube_system_yaml_overrides }}"
    _cmpnt_runcommand: ./tools/deployment/multinode/020-ingress.sh
  environment:
    OSH_EXTRA_HELM_ARGS_INGRESS_KUBE_SYSTEM: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_INGRESS_KUBE_SYSTEM') | default('', True) }} -f /tmp/suse-ingress-kube-system.yaml"
    OSH_EXTRA_HELM_ARGS_INGRESS_OPENSTACK: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_INGRESS_OPENSTACK') | default('', True) }} -f /tmp/suse-ingress-namespace.yaml"
    OSH_EXTRA_HELM_ARGS_INGRESS_CEPH: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_INGRESS_CEPH') | default('', True) }} -f /tmp/suse-ingress-namespace.yaml"
  tags:
    - ingress
    - run

# TODO(evrardjp): Improve idempotency
- name: Add ceph secrets to k8s
  include: ceph-secrets.yml
  tags:
    - run

- name: Deploy mariadb
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-mariadb.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_mariadb_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/050-mariadb.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_MARIADB: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_MARIADB') | default('', True) }} -f /tmp/suse-mariadb.yaml"

- name: Create privileged ClusterRoleBinding for ServiceAccounts
  include: privileged-cluster-role-binding.yml
  tags:
    - mariadb
    - run

- name: Deploy rabbitmq
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-rabbitmq.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_rabbitmq_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/060-rabbitmq.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_RABBITMQ: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_RABBITMQ') | default('', True) }} -f /tmp/suse-rabbitmq.yaml"
  tags:
    - rabbitmq
    - run

- name: Deploy memcached
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-memcached.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_memcached_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/070-memcached.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_MEMCACHED: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_MEMCACHED') | default('', True) }} -f /tmp/suse-memcached.yaml"
  tags:
    - memcached
    - run

# Keystone should be kept separate as its one failing.
- name: Deploy keystone, ignore errors due to SCRD-4677. #https://jira.suse.de/browse/SCRD-4677.
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-keystone.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_keystone_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/080-keystone.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_KEYSTONE: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_KEYSTONE') | default('', True) }} -f /tmp/suse-keystone.yaml"
  tags:
    - keystone
    - run

- name: Use a different horizon script as missing a multinode version without node port requirement
  copy:
    src: 085-horizon.sh
    dest: /opt/openstack-helm/tools/deployment/multinode/085-horizon.sh
    mode: '0755'
  tags:
    - horizon
    - run

- name: Deploy horizon
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-horizon.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_horizon_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/085-horizon.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_HORIZON: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_HORIZON') | default('', True) }} -f /tmp/suse-horizon.yaml"
  tags:
    - horizon
    - run

  #TODO(evrardjp): Remove the next two tasks by an appropriate include in tasks/main
  #when https://review.openstack.org/#/c/586992 is merged
- name: Copy ceph provisioner
  template:
    src: 046-ceph-deploy-with-existing-ceph.sh.j2
    dest: "/opt/openstack-helm/tools/deployment/developer/ceph/046-ceph-deploy-with-existing-ceph.sh"
    mode: "0755"
  tags:
    - run

- name: Execute ceph provisioner
  shell: ../openstack-helm/tools/deployment/developer/ceph/046-ceph-deploy-with-existing-ceph.sh
  args:
    executable: /bin/bash
    chdir: /opt/openstack-helm-infra
  tags:
    - run

- name: Deploy glance
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-glance.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_glance_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/100-glance.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_GLANCE: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_GLANCE') | default('', True) }} -f /tmp/suse-glance.yaml"
  tags:
    - glance
    - run

# This is an arbitrary UUID value that's passed to the libvirt daemonset setup job for configuring a libvirt secret XML file
- name: Create Libvirt ceph cinder secret uuid
  shell: uuidgen
  register: libvirt_ceph_cinder_secret_uuid

- name: Deploy cinder
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-cinder.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_cinder_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/110-cinder.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_CINDER: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_CINDER') | default('', True) }} -f /tmp/suse-cinder.yaml"
  tags:
    - cinder
    - run

- name: Deploy OVS
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-ovs.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_ovs_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/120-openvswitch.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_OPENVSWITCH: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_OPENVSWITCH') | default('', True) }} -f /tmp/suse-ovs.yaml"
  tags:
    - ovs
    - run

- name: Deploy libvirt
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-libvirt.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_libvirt_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/130-libvirt.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_LIBVIRT: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_LIBVIRT') | default('', True) }} -f /tmp/suse-libvirt.yaml"
  tags:
    - libvirt
    - run

# TODO(evrardjp): Check if need to have our own dummy overrides
# In that case, try to split the shell script upstream in two scripts.
# Compute kit deploys nova and neutron but only nova needs overrides
- name: Deploy compute kit
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-nova.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_nova_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/140-compute-kit.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_NOVA: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_NOVA') | default('', True) }} -f /tmp/suse-nova.yaml"
  tags:
    - nova
    - neutron
    - run

- name: Deploy Heat
  import_tasks: component-install.yml
  vars:
    _cmpnt_template: suse-heat.yaml
    _cmpnt_overrides: "{{ suse_osh_deploy_heat_yaml_overrides }}"
    _cmpnt_runcommand: "./tools/deployment/multinode/150-heat.sh"
  environment:
    OSH_EXTRA_HELM_ARGS_HEAT: "{{ lookup('env', 'OSH_EXTRA_HELM_ARGS_HEAT') | default('', True) }} -f /tmp/suse-heat.yaml"
  tags:
    - heat
    - run
