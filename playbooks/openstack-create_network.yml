---
- hosts: localhost
  gather_facts: no
  connection: local
  vars:
    ansible_python_interpreter: /usr/bin/python3
  post_tasks:
    - name: Load generic vars
      include_vars: "{{ playbook_dir }}/../vars/common-vars.yml"
    - name: Load openstack vars
      include_vars: "{{ playbook_dir }}/../vars/deploy-on-openstack.yml"

    - name: Create/Update openstack network
      block:
        - name: create network stack
          register: network_stack_create_output
          os_stack:
            state: "present"
            name: "{{ deploy_on_openstack_network_stackname }}"
            template: "{{ playbook_dir }}/../heat-templates/openstack-network.yml"
            auth_type: "{{ os_auth_type }}"
            parameters:
              prefix: "{{ socok8s_envname }}"
              network_external: "{{ deploy_on_openstack_external_network }}"
              network_internal_cidr: "{{ deploy_on_openstack_internal_subnet_cidr }}"

        - name: show network stack output
          debug:
            var: network_stack_create_output

    - name: Add vip with cidr in extravars
      delegate_to: localhost
      blockinfile:
        path: "{{ socok8s_extravars }}"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR {{ item.output_key }}"
        block: |
          socok8s_{{ item.output_key }}: {{ item.output_value }}
      with_items: "{{ network_stack_create_output.stack.outputs }}"
      when: item.output_key == 'ext_vip'

    - name: Add internal network ID to group_vars
      blockinfile:
        path: "{{ socok8s_workspace }}/inventory/group_vars/all/openstack-network.yml"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR deploy_on_openstack_internal_network_id"
        block: |
          deploy_on_openstack_internal_network_id: {{ item.output_value }}
      with_items: "{{ network_stack_create_output.stack.outputs }}"
      when: ( item.output_key == 'network_id')

    - name: Add internal subnet ID to group_vars
      blockinfile:
        path: "{{ socok8s_workspace }}/inventory/group_vars/all/openstack-network.yml"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR deploy_on_openstack_internal_subnet_id"
        block: |
          deploy_on_openstack_internal_subnet_id: {{ item.output_value }}
      with_items: "{{ network_stack_create_output.stack.outputs }}"
      when: ( item.output_key == 'subnet_id')

    - name: Add router ID to group_vars
      blockinfile:
        path: "{{ socok8s_workspace }}/inventory/group_vars/all/openstack-network.yml"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR deploy_on_openstack_router_id"
        block: |
          deploy_on_openstack_router_id: {{ item.output_value }}
      with_items: "{{ network_stack_create_output.stack.outputs }}"
      when: ( item.output_key == 'router_id')

    - name: Reload group_vars openstack-network to have the router ID available
      include_vars:
        file: "{{ socok8s_workspace }}/inventory/group_vars/all/openstack-network.yml"

    - name: Get router interface port ID
      command: "openstack port list --router {{ deploy_on_openstack_router_id }} -f value -c ID"
      register: _router_interface_port_id
      changed_when: False

    - name: Add router interface port ID to group_vars
      blockinfile:
        path: "{{ socok8s_workspace }}/inventory/group_vars/all/openstack-network.yml"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK FOR deploy_on_openstack_router_interface_id"
        block: |
          deploy_on_openstack_router_interface_id: {{ _router_interface_port_id.stdout }}
