---
- hosts: soc-deployer
  gather_facts: no
  tasks:
    - name: Load variables
      include_vars: "{{ item }}"
      loop:
        - "{{ playbook_dir }}/../vars/common-vars.yml"
        - "{{ playbook_dir }}/../vars/manifest.yml"
      tags:
        - always

    - name: Creating velum automation folder
      file:
        path: "{{ upstream_repos_clone_folder }}/ccp"
        state: directory
      when:
        - not caasp4_deployed

    - name: Copying environment.json
      copy:
        src: "{{ socok8s_caasp_environment_details }}"
        dest: "{{ upstream_repos_clone_folder }}/ccp/environment.json"
      when:
        - not caasp4_deployed

    - name: Install the necessary packages
      package:
        name: "{{ velum_automation_host_packages }}"
        state: present
      register: _pkginstall
      until: _pkginstall is success
      retries: 5
      vars:
        velum_automation_host_packages:
          - git-core
          - gcc
          - make
          - jq
          - ruby2.5-rubygem-bundler
          - ruby2.5-devel
          - phantomjs
          - libxml2-devel
          - libxslt-devel
          - which
      when:
        - not caasp4_deployed

    - name: Copying velum automation
      unarchive:
        src: "{{ playbook_dir }}/../files/velum-bootstrap.tar.xz"
        dest: "{{ upstream_repos_clone_folder }}/ccp/"
      when:
        - not caasp4_deployed


    # In SLE15SP1 the default bundler is 2.x while the velum Gemfile.lock has been bundled with 1.15.0 so we need to
    # manually remove the BUNDLED WITH+1.15.0 text of the Gemfile.lock for it to install the dependencies
    # This is only needed for CAASP3, can be removed once we move to CAASP4
    - name: Remove "BUNDLED WITH" text from Gemfile.lock
      lineinfile:
        path: "{{ upstream_repos_clone_folder }}/ccp/velum-bootstrap/Gemfile.lock"
        state: absent
        regexp: "{{ item }}"
      with_items:
        - "^BUNDLED WITH$"
        - "1.15.0$"



    # Ansible velum needs to get given a specific shell, bash, therefore
    # the shell module has to be used (command doesn't accept executable)
    # Skip ansible lint is therefore used, to avoid the warning that this task
    # should be using command instead.
    - name: Use Velum tooling
      shell: "./velum-interactions {{ item }} -e {{ upstream_repos_clone_folder }}/ccp/environment.json"
      with_items:
        - "--setup"
        - "--configure --enable-tiller"
        - "--bootstrap --enable-tiller"
      args:
        executable: /bin/bash
        chdir: "{{ upstream_repos_clone_folder }}/ccp/velum-bootstrap"
      tags:
        - skip_ansible_lint
      when:
        - not caasp4_deployed
