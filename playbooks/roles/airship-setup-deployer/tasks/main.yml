---
- name: Load standard variables
  include_vars: "{{ playbook_dir }}/../vars/common-vars.yml"

- name: Load vip from user variables
  include_vars: "{{ socok8s_extravars }}"

- name: Install system packages
  become: yes
  package:
    name: "{{ suse_airship_deploy_packages }}"
    state: present
  register: install_packages
  until: install_packages is success
  retries: 5
  delay: 2
  tags:
    - install

- name: Pip install python libraries
  become: yes
  pip:
    name: "{{ suse_airship_deploy_python_libs }}"
  register: install_python_libs
  until: install_python_libs is success
  retries: 5
  delay: 2
  tags:
    - install

- name: Enable docker systemd service
  become: yes
  systemd:
    name: docker
    state: started
    enabled: yes
  tags:
    - install

- name: Add the user to the group 'docker'
  become: yes
  user:
    name: "{{ lookup('env','USER') }}"
    groups: docker
    append: yes

- name: Ensure kubectl is properly configured
  include_role:
    name: common-deployer
    tasks_from: kubectl-setup
  tags:
    - install

- name: Ensure helm and tiller are up to date
  include_role:
    name: common-deployer
    tasks_from: helm-install
  tags:
    - install

- name: Ensure helm runs on localhost
  include_role:
    name: common-deployer
    tasks_from: helm-run
  tags:
    - run

# Need to use specific marker to avoid overwriting via other step
- name: Ensure VIP is present in /etc/hosts for the services to deploy
  become: yes
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK for VIP entries"
    block: |
      # UCP service public end points
      {{ socok8s_dcm_vip }} keystone.{{ ucp_namespace_name }}.{{ cluster_domain_suffix }} keystone-api.{{ ucp_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} barbican.{{ ucp_namespace_name }}.{{ cluster_domain_suffix }} barbican-api.{{ ucp_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} shipyard.{{ ucp_namespace_name }}.{{ cluster_domain_suffix }}
      # Openstack admin service and internal endpoints
      {{ socok8s_dcm_vip }} identity-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} image-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} volume-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} compute-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} network-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} dashboard-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_dcm_vip }} orchestration-api.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      # Openstack service public endpoints
      {{ socok8s_ext_vip }} identity.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} image.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} volume.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} compute.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} network.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} dashboard.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} novncproxy.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}
      {{ socok8s_ext_vip }} orchestration.{{ openstack_namespace_name }}.{{ cluster_domain_suffix }}

- name: Ensure tls certs are available
  include: cfssl-tls-certs.yml
  when:
    - (not (disable_tls_ucp | bool) or not (disable_tls_osh | bool) )

- name: Creates /etc/openstack directory
  become: yes
  file:
    path: "{{ item }}"
    state: directory
    #   owner: "{{ ansible_user }}"
  with_items:
    - /etc/openstack

- name: Copy clouds.yml
  become: yes
  template:
    src: clouds.yml.j2
    dest: /etc/openstack/clouds.yaml
