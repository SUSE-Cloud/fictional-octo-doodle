---
# defaults file for deploy-osh

# Location of the kubeconfig file, fetched from velum UI.
kubeconfig_file_path: "{{ socok8s_workspace }}/kubeconfig"

suse_osh_deploy_packages:
  - python-setuptools
  - python-virtualenv
  - python-pip
  - python-devel
  - autoconf
  - git
  - gcc
  - make
  - jq
#  - ca-certificates-suse
  - rng-tools
  - curl #after this line these are the packages required for osh deploy itself
  - python-selinux
  - ceph-common
  - nfs-utils
  - bridge-utils

# Keep this until helm is packaged as rpm
helm_download_url: "https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get"

# OpenStack-Helm repos, frozen on 9th November 2018
osh_repos:
  openstack-helm-infra:
    src: https://git.openstack.org/openstack/openstack-helm-infra.git
    version: b55e9b10a72ce5531ae22f15f953b2eb71e6f623
  openstack-helm:
    src: https://git.openstack.org/openstack/openstack-helm.git
    version: 4f94593e870ac879b2d01300cb02485ace58b3ac

suse_osh_deploy_require_ha: True

suse_osh_deploy_storage:
  adminId: admin
  adminSecretName: pvc-ceph-conf-combined-storageclass
  adminSecretNamespace: openstack
  pool: rbd
  userId: admin
  userSecretName: pvc-ceph-client-key
  userSecretNamespace: openstack
  glance:
    user: admin
    pool: images
  cinder:
    user: admin
    pool: cinder
  cinder_backup:
    user: admin
    pool: backups

# Example SES secrets per pool.
# This should be appearing only in your user variables.
#suse_ses_cinder_pool_key:
#suse_ses_cinder_backup_pool_key:
#suse_ses_glance_pool_key:

# ClusterRole to allow privileged containers
suse_osh_deploy_privileged_cluster_role: suse:caasp:psp:privileged

# Set this to false if you want to speed up your builds or do partial upgrades
suse_osh_deploy_always_redeploy: True

# These variables were created to provide a way for deployers to
# override the default registry, for example to point to a local
# registry. This change will apply to all the charts value files by
# default, as all our own value files are including a common file
# (files/common-images-overrides.yml) making use of those variables.
# Check the variables there.
# For the registry case, the local registry should still have the same
# groups as upstream registry (kolla, openstackhelm), and the same image names.
# For versions, use suse_osh_image_version for a global OpenStack version change
# accross all images (as it is defined in common-images-overrides which is
# included in all the places).
# For a more surgical per component approach, use service overrides, like
# suse_osh_deploy_cinder_yaml_overrides for cinder for example.
#
# These two variables are now defined in vars/commonvars as they are shared
# between Ariship and OSH based deployments.
suse_osh_registry_location: "{{ suse_osh_registry_location | default('docker.io') }}"
suse_osh_image_version: "{{ suse_osh_image_version }} | default('ocata') }}"

# Default overrides
suse_osh_deploy_cinder_yaml_overrides: {}
suse_osh_deploy_glance_yaml_overrides: {}
suse_osh_deploy_ingress_kube_system_yaml_overrides: {}
suse_osh_deploy_ingress_namespace_yaml_overrides: {}
suse_osh_deploy_keystone_yaml_overrides: {}
suse_osh_deploy_horizon_yaml_overrides: {}
suse_osh_deploy_heat_yaml_overrides: {}
suse_osh_deploy_libvirt_yaml_overrides: {}
suse_osh_deploy_mariadb_yaml_overrides: {}
suse_osh_deploy_memcached_yaml_overrides: {}
suse_osh_deploy_nova_yaml_overrides: {}
suse_osh_deploy_ovs_yaml_overrides: {}
suse_osh_deploy_rabbitmq_yaml_overrides: {}
