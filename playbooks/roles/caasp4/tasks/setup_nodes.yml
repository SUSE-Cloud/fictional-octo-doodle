---
#
# (c) Copyright 2019 SUSE Linux GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

- name: Copy skuba openstack terraform files to socok8s workspace
  copy:
    src: "{{ playbook_dir }}/../submodules/skuba/ci/infra/openstack/"
    dest: "{{ skuba_ci_terraform_workspace }}"
    mode: 0775
    force: no

- name: Create a terraform variable file
  template:
    src: skuba-terraform.tfvars.j2
    dest: "{{ skuba_ci_terraform_workspace }}/terraform.tfvars"
  vars:
    image_name: "{{ skuba_ci_terraform_image_name }}"
    image_username: "{{ skuba_ci_terraform_image_username }}"
    image_password: "{{ skuba_ci_terraform_image_password }}"
    # NOTE(toabctl):  net/subnet/router variable names must match the names from heat-templates/openstack-network
    internal_net: "{{ socok8s_envname }}-net"
    internal_subnet: "{{ socok8s_envname }}-subnet"
    internal_router: "{{ socok8s_envname }}-router"
    external_net: "{{ deploy_on_openstack_external_network }}"
    stack_name: "{{ socok8s_envname }}-caasp4"
    subnet_cidr: "{{ deploy_on_openstack_internal_subnet_cidr }}"
    master_count: "{{ skuba_ci_terraform_master_count }}"
    master_flavor: "{{ skuba_ci_terraform_master_flavor }}"
    worker_count: "{{ skuba_ci_terraform_worker_count }}"
    worker_flavor: "{{ skuba_ci_terraform_worker_flavor }}"
    authorized_keys: "{{ skuba_ci_terraform_autorized_keys_files }}"
    ntp_servers:
      - "0.novell.pool.ntp.org"
      - "1.novell.pool.ntp.org"
      - "2.novell.pool.ntp.org"
      - "3.novell.pool.ntp.org"

- name: Hidden terraform dir available
  stat:
    path: "{{ skuba_ci_terraform_workspace }}/.terraform"
  register: _terraform_hidden_dir

- name: Initialize terraform in the workspace dir
  command: terraform init -input=false
  args:
    chdir: "{{ skuba_ci_terraform_workspace }}"
  when: not _terraform_hidden_dir.stat.exists

# NOTE(toabctl): The network resources are already created
# via a heat stack when running "./run.sh deploy_network"
# So only "import" to terraform. Otherwise terraform tries to create
# the same resources again
- name: Import existing networking resources to terraform
  include_tasks: _setup_nodes_terraform_import_resources.yml

- name: Apply terraform plan in the workspace dir
  terraform:
    project_path: "{{ skuba_ci_terraform_workspace }}"
    state: present

- name: Get terraform output variables
  command: terraform output -json
  args:
    chdir: "{{ skuba_ci_terraform_workspace }}"
  changed_when: False
  register: _terraform_json_output

- name: Set terraform json output fact
  set_fact:
    _terraform_json_output: "{{ _terraform_json_output.stdout|from_json }}"

- name: Extend inventory in workspace with newly created caasp nodes
  template:
    src: inventory-caasp4.yml.j2
    dest: "{{ socok8s_workspace }}/inventory/caasp4.yml"
