---
#
# (c) Copyright 2019 SUSE Linux GmbH
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

- name: Get skuba version
  command: skuba version
  changed_when: False
  register: _skuba_version

- name: Show skuba version
  debug:
    # NOTE: skuba is currently showing the version at stderr (see https://github.com/SUSE/skuba/issues/412)
    msg: "{{ _skuba_version.stdout }}{{ _skuba_version.stderr }}"

- name: Get terraform output variables
  command: "{{ terraform_binary_path }} output -json"
  args:
    chdir: "{{ skuba_ci_terraform_workspace }}"
  changed_when: False
  register: _terraform_json_output

- name: Set terraform json output fact
  set_fact:
    _terraform_json_output: "{{ _terraform_json_output.stdout|from_json }}"

- name: Is skuba cluster dir available
  stat:
    path: "{{ skuba_cluster_basedir }}/{{ skuba_cluster_name }}"
  register: _skuba_cluster_dir

- name: Init skuba cluster
  command: "skuba cluster init --control-plane {{ _terraform_json_output.ip_load_balancer.value }} {{ skuba_cluster_name }}"
  args:
    chdir: "{{ skuba_cluster_basedir }}"
  when: not _skuba_cluster_dir.stat.exists

- name: Get skuba cluster status
  command: "skuba cluster status"
  args:
    chdir: "{{ skuba_cluster_basedir }}/{{ skuba_cluster_name }}"
  register: _skuba_cluster_status
  changed_when: False

# TODO(toabctl): support more than one master
- name: Bootstrap first master node
  command: "skuba node bootstrap master-0 -s -t {{ _terraform_json_output.ip_masters.value[0] }} -u {{ image_username }}"
  args:
    chdir: "{{ skuba_cluster_basedir }}/{{ skuba_cluster_name }}"
  when: not _skuba_cluster_status.stdout | regex_search("^master-0.*", multiline=True)

- name: Join worker nodes
  command: "skuba node join worker-{{ idx }} -r worker -s -t {{ item }} -u {{ image_username }}"
  args:
    chdir: "{{ skuba_cluster_basedir }}/{{ skuba_cluster_name }}"
  loop: "{{ _terraform_json_output.ip_workers.value }}"
  loop_control:
    index_var: idx
  when: not _skuba_cluster_status.stdout | regex_search('^worker-' ~ idx ~ '.*', multiline=True)

- name: Copy kubeconfig generated with new cluster to generic workspace
  copy:
    src: "{{ skuba_cluster_basedir }}/{{ skuba_cluster_name }}/admin.conf"
    dest: "{{ kubeconfig_file_path }}"
