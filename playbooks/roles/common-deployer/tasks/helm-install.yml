---
- name: Check versions
  # the awk extracts the sha of both the helm client and server.
  # uniq means same version or not
  shell: |
    set -o pipefail
    helm version | awk '{print $3}' | uniq | wc -l
  register: _helmcheck
  failed_when: false
  changed_when: false

- name: Helm has to be installed
  set_fact:
    helm_state: 'to_install'
  when:  _helmcheck.stdout == '0'

- name: Helm is up to date
  set_fact:
    helm_state: 'ready'
  when:  _helmcheck.stdout == '1'

- name: Helm has to be updated
  set_fact:
    helm_state: 'to_update'
  when:  _helmcheck.stdout == '2'

- name: Fail if state is unknown
  fail:
    msg: "Unknown helm state"
  when: _helmcheck.stdout not in ['0','1','2']

- name: Install helm package
  become: yes
  package:
    name: helm
    state: present
  retries: 5
  delay: 2
  tags:
    - install

- name: Create tiller service account
  include_tasks: apply_on_k8s.yml
  loop:
    - action: create tiller ServiceAccount with ClusterRoleBinding
      template_src_file: k8s-tiller-serviceaccount-and-cluster-role-binding.yml.j2
      templated_location: /tmp/socok8s-tiller-serviceaccount-and-cluster-role-binding.yml
  when: caasp4_deployed

- name: Install tiller
  command: helm init {{ (caasp4_deployed | bool) | ternary('--service-account tiller','') }}
  register: _helminstall
  when: helm_state == 'to_install'
  changed_when: True

- name: Upgrade tiller
  command: helm init --upgrade {{ (caasp4_deployed | bool) | ternary('--service-account tiller','') }}
  register: _helmupgrade
  when: helm_state == 'to_update' or helm_state == 'to_install'
  changed_when: True

- name: Show stdout of upgrade
  debug:
    var: _helmupgrade
    verbosity: 1
  when: helm_state == 'to_update' or helm_state == 'to_install'

