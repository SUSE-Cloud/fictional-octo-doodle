---
# socok8s_envname is the "unique" variable that is used to create resource names
socok8s_envname: "{{ lookup('env','SOCOK8S_ENVNAME') | default('socok8s', true) }}"
upstream_repos_clone_folder: "/opt"
developer_mode: "{{ (lookup('env','SOCOK8S_DEVELOPER_MODE') | default('False', true) ) | bool }}"
# configure the workspace base directory (where workspace(s) are created in)
# ansible lookup plugin runs only on ansible runner/control node so env is from runner node.
socok8s_default_basedir: "{{ lookup('env','HOME') | default('/tmp', true) }}"
socok8s_workspace_basedir: "{{ lookup('env','SOCOK8S_WORKSPACE_BASEDIR') | default(socok8s_default_basedir, true) }}"
# configure the full path to the current workspace
socok8s_workspace: "{{ socok8s_workspace_basedir }}/{{ socok8s_envname }}-workspace"

# Need to be host specific home (as runner and deployer can have different user and hence home directory)
socok8s_deployer_basedir: "{{ ansible_env.HOME }}"
# configure the full path to the deployer workspace
socok8s_deployer_workspace: "{{ socok8s_deployer_basedir }}/{{ socok8s_envname }}-workspace"
socok8s_extravars: "{{ socok8s_workspace }}/env/extravars"
socok8s_ses_pools_details: "{{ socok8s_workspace }}/ses_config.yml"
socok8s_registry_cert: "{{ socok8s_workspace }}/certs/domain.crt"
socok8s_registry_certkey: "{{ socok8s_workspace }}/certs/domain.key"
socok8s_libvirtuuid: "{{ socok8s_workspace }}/libvirt.uuid"
# Which deployment method have we been started with. (This is guaranted to be set
# when executed via ./run.sh on ansible runner node
socok8s_deployment_mechanism: "{{ lookup('env', 'DEPLOYMENT_MECHANISM') }}"

suse_osh_registry_location: "docker.io"
suse_openstack_image_version: "rocky-opensuse_15"
suse_infra_image_version: "latest-opensuse_15"
suse_osh_openstack_release: "rocky"

obs_mirror: "{{ lookup('env','SOCOK8S_OPENSUSE_MIRROR') | default('https://download.opensuse.org', true) }}"
ibs_mirror: http://ibs-mirror.prv.suse.net/ibs
dist_mirror: http://ibs-mirror.prv.suse.net/dist

socok8s_repos_to_configure:
  SLE12SP3-product: http://provo-clouddata.cloud.suse.de/repos/x86_64/SLES12-SP3-Pool/
  SLE12SP3-update: http://provo-clouddata.cloud.suse.de/repos/x86_64/SLES12-SP3-Updates/
  SES5-product: http://provo-clouddata.cloud.suse.de/repos/x86_64/SUSE-Enterprise-Storage-5-Pool/
  SES5-update: http://provo-clouddata.cloud.suse.de/repos/x86_64/SUSE-Enterprise-Storage-5-Updates/
  SLES-15-SP1-Product: "{{ ibs_mirror }}/SUSE/Products/SLE-Product-SLES/15-SP1/x86_64/product/"
  SLES-15-SP1-Product-Update: "{{ ibs_mirror }}/SUSE/Updates/SLE-Product-SLES/15-SP1/x86_64/update/"
  SLE-15-SP1-Module-BaseSystem: "{{ ibs_mirror }}/SUSE/Products/SLE-Module-Basesystem/15-SP1/x86_64/product/"
  SLE-15-SP1-Module-BaseSystem-Update: "{{ ibs_mirror }}/SUSE/Updates/SLE-Module-Basesystem/15-SP1/x86_64/update/"
  SLE-15-SP1-Module-Containers: "{{ ibs_mirror }}/SUSE/Products/SLE-Module-Containers/15-SP1/x86_64/product/"
  SLE-15-SP1-Module-Containers-Update: "{{ ibs_mirror }}/SUSE/Updates/SLE-Module-Containers/15-SP1/x86_64/update/"
  SLE-15-SP1-Module-Public-Cloud: "{{ ibs_mirror }}/SUSE/Products/SLE-Module-Public-Cloud/15-SP1/x86_64/product/"
  SLE-15-SP1-Module-Public-Cloud-Update: "{{ ibs_mirror }}/SUSE/Updates/SLE-Module-Public-Cloud/15-SP1/x86_64/update/"
  SLE-15-SP1-Module-Development-Tools: "{{ ibs_mirror }}/SUSE/Products/SLE-Module-Development-Tools/15-SP1/x86_64/product/"
  SLE-15-SP1-Module-Development-Tools-Update: "{{ ibs_mirror }}/SUSE/Updates/SLE-Module-Development-Tools/15-SP1/x86_64/update/"
  # needed for python-barbicanclient
  SLES-15-SP1-backports: "https://download.opensuse.org/repositories/openSUSE:/Backports:/SLE-15-SP1/standard/"
  socok8s_SLE15SP1: "https://download.opensuse.org/repositories/Cloud:/socok8s:/master/SLE_15_SP1/"
  # needed for skuba and terraform
  CAASP40-SLES-151: "{{ ibs_mirror }}/Devel:/CaaSP:/4.0/SLE_15_SP1/"
  CAASP40-SLES-150: "{{ ibs_mirror }}/Devel:/CaaSP:/4.0/SLE_15/"
  SYSM-TERRAFORM-SLES-151: "http://download.opensuse.org/repositories/systemsmanagement:/terraform/SLE_15_SP1/"
  SYSM-TERRAFORM-SLES-150: "http://download.opensuse.org/repositories/systemsmanagement:/terraform/SLE_15/"


######################################################
# Following variables are used by airship logic only
######################################################

suse_ovs_image_version: "v2.8.1"

socok8s_deploy_config_location: "{{ socok8s_deployer_workspace }}"

ucp_namespace_name: "{{ ucp_namespace | default('ucp') }}"
ceph_namespace_name: "{{ ceph_namespace | default('ceph') }}"
openstack_namespace_name: "{{ openstack_namespace | default('openstack') }}"

# Variables used for building airship images locally
suse_distro_identifier: opensuse_15
suse_airship_components_base_image: "opensuse/leap:15.1"

# check if argument is set in commandline for airship_local_images_flag value
# otherwise use corresponding environment variable to determine it
suse_airship_build_local_images: "{%- if airship_local_images_flag is defined -%}
                                    {{ airship_local_images_flag | bool }}
                                  {%- else -%}
                                    {{ lookup('env','AIRSHIP_BUILD_LOCAL_IMAGES') | default('False', true) | bool }}
                                  {%- endif -%}
                                 "

# Flag to be used when just want to use previously built local airship component images
# without need of re-building them.
suse_airship_use_local_images: "{{ lookup('env','AIRSHIP_USE_LOCAL_IMAGES') | default('False', true) | bool }}"

suse_airship_registry_location: "{%- if suse_airship_build_local_images or suse_airship_use_local_images -%}
                                   {{ ansible_hostname }}:5000
                                 {%- else -%}
                                   quay.io
                                 {%- endif -%}"

# Tag passed to image building step
suse_airship_components_image_build_tag: "master"

# Provide prefix passed to salt runner openstack.integrate for creating
# openstack pools e.g. "socok8s_" . If runner script is used and prefix is not
# provided, then don't set it here.
# airship_ses_pools_prefix: ""

# Complete distro specific published image tag
suse_airship_components_image_tag: |
                                   {% if suse_airship_build_local_images or suse_airship_use_local_images %}
                                   {% set _img_tag = {
                                     'armada': suse_airship_components_image_build_tag ~ '-' ~ suse_distro_identifier,
                                     'shipyard': suse_airship_components_image_build_tag ~ '-' ~ suse_distro_identifier,
                                     'airflow' : suse_airship_components_image_build_tag ~ '-' ~ suse_distro_identifier,
                                     'deckhand': suse_airship_components_image_build_tag ~ '-' ~ suse_distro_identifier,
                                     'pegleg': suse_airship_components_image_build_tag ~ '-' ~ suse_distro_identifier
                                    }
                                   %}
                                   {% else %}
                                   {% set _img_tag = {
                                     'armada': '46bb9bd8b35905294920eb4fdf30593cb4899780-opensuse_15',
                                     'shipyard': 'a9ff859df980fbb95a912fc49312ef3c51f65b3f-opensuse_15',
                                     'airflow': 'a9ff859df980fbb95a912fc49312ef3c51f65b3f-opensuse_15',
                                     'deckhand': '971c901c4da36e3e31be58d4be8b0e194e715d8f-opensuse_15',
                                     'pegleg': '70f2db465277b60d80e4bcbf347be565b6f81a05-opensuse_15'
                                   }
                                   %}
                                   {% endif %}
                                   {{ _img_tag }}

socok8s_site_name: "soc"

# Flag to run pod rally tests (default false)
run_rally_tests: false

# where the generated secrets are stored
secrets_location: "{{ socok8s_workspace }}/secrets"

#options used to generate random passwords for Airship sites
password_opts: "length=20 chars=ascii_letters,digits,_"

#Set timeout for ucp deployment
ucp_deploy_timeout: 1800

#Set timeout for osh deployment
openstack_helm_deploy_timeout: 3000

#Set volume size for all rabbitmq in openstack deployment and postgresql in ucp deployment.
rabbitmq_volume_size: 1Gi
db_volume_size: 5Gi

#Set scale profile; options: "minimal" or "ha"
scale_profile: "{{ lookup('env','scale_profile') | default('minimal', true) }}"

#Set timeout for helm cleanup.
helm_delete_timeout: 900

# Number of caasp workers to use for the control plane,
# the remainder will be used as computer hosts
airship_ucp_control_workers: 2

# Location of the kubeconfig file, copied from cluster setup dir (CaaSP4)
kubeconfig_file_path: "{{ socok8s_workspace }}/kubeconfig"

# enable resource limiting for openstack pods
openstack_helm_pod_resources_enabled:
  ceph: true
  libvirt: true
  ingress: true
  cinder: true
  cinder_rabbitmq: false
  neutron: true
  neutron_rabbitmq: false
  nova: true
  nova_rabbitmq: false
  glance: true
  glance_rabbitmq: false
  heat: true
  heat_rabbitmq: false
  horizon: true
  keystone: true
  keystone_rabbitmq: false
  mariadb: true
  memcached: true
  tempest: true
# If SES is deployed into stand alone extra node ('aio'), or into CaaSP cluster ("rook")
ses_deployment: aio

# Map for deployment mechanism and its related vars file (added to decouple in case
# mechanism name got updated later).
deploy_mechanism_vars_map:
  kvm: deploy-on-kvm.yml
  openstack: deploy-on-openstack.yml

